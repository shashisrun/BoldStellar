{"ast":null,"code":"import axios from '../Services/ApiService';\nimport CookieService from '../Services/CookieService';\nconst cookie = new CookieService();\n\nclass ApiRepositories {\n  async GetMenu(id = '') {\n    try {\n      const response = await axios.get('/api/menu/' + id);\n      return response.data;\n    } catch (error) {\n      console.error('Error', error.response);\n      return false;\n    }\n  }\n\n  async GetBlog(id = '') {\n    try {\n      const response = await axios.get('/api/blog/' + id);\n      return response.data;\n    } catch (error) {\n      console.error('Error', error.response);\n      return false;\n    }\n  }\n\n  async GetPage(id = '') {\n    try {\n      const response = await axios.get('/api/page/' + id);\n      return response.data;\n    } catch (error) {\n      console.error('Error', error.response);\n      return false;\n    }\n  }\n\n  async GetSlider(id = '') {\n    try {\n      const response = await axios.get('/api/slider/' + id);\n      return response.data;\n    } catch (error) {\n      console.error('Error', error.response);\n      return false;\n    }\n  }\n\n  async CreateMenu(menu) {\n    try {\n      console.clear(); // var data = new FormData();\n      // data.append('title', 'Menu1');\n      // data.append('url', 'localhost');\n      // data.append('status', '1');\n      // data.append('sortby', '1');\n\n      const response = await axios.post('/api/menu', menu);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      console.error('Error', error.response);\n      return false;\n    }\n  }\n\n  async doUserLogin(credentials) {\n    try {\n      const response = await axios.post('oauth/token', credentials);\n      return response.data;\n    } catch (error) {\n      //console.error('Error', error.response);\n      return false;\n    }\n  }\n\n  async doUserRegistration(credentials) {\n    try {\n      const response = await axios.post('api/register', credentials);\n      return response.data;\n    } catch (error) {\n      console.error('Error', error);\n      return false;\n    }\n  }\n\n  async doUserLogout(credentials) {\n    try {\n      const response = await axios.post('api/logout', credentials);\n      cookie.remove('refresh_token');\n      cookie.remove('access_token');\n      cookie.remove('remeber_me');\n      console.error(response);\n      return response.data;\n    } catch (error) {\n      console.error('Error', error);\n      return false;\n    }\n  }\n\n  async doUserLogoutAll(credentials) {\n    try {\n      const response = await axios.post('api/logout/all', credentials);\n      cookie.remove('refresh_token');\n      cookie.remove('access_token');\n      cookie.remove('remeber_me');\n      console.error(response);\n      return response.data;\n    } catch (error) {\n      console.error('Error', error);\n      return false;\n    }\n  }\n\n  handleLoginSucces(response, remember = false) {\n    if (remember == false) {\n      const options = {\n        path: '/'\n      };\n      cookie.set('refresh_token', response.refresh_token, options);\n      cookie.set('access_token', response.access_token, options);\n      cookie.set('remeber_me', false);\n    } else {\n      const options = {\n        path: '/',\n        maxAge: response.expires_in\n      };\n      cookie.set('refresh_token', response.refresh_token, options);\n      cookie.set('access_token', response.access_token, {\n        path: '/'\n      });\n      cookie.set('remeber_me', true);\n    }\n\n    return true;\n  }\n\n  async isLoggedIn() {\n    if (cookie.get('access_token') != null) {\n      return true;\n    } else {\n      if (cookie.get('refresh_token') != null) {\n        const refreshCredentials = {\n          'refresh_token': cookie.get('refresh_token'),\n          'grant_type': 'refresh_token',\n          'client_id': '2',\n          'client_secret': 'h4Rszv34VV9o0BHKhowVSLEg5kfFIEvNlJoALpHc'\n        };\n\n        try {\n          const response = await axios.post('oauth/token', refreshCredentials); //console.log(response);\n\n          var options = null;\n\n          if (cookie.get('remember_me') == true) {\n            options = {\n              path: '/',\n              maxAge: response.expires_in\n            };\n          } else {\n            options = {\n              path: '/'\n            };\n          }\n\n          cookie.set('refresh_token', response.data.refresh_token, options);\n          cookie.set('access_token', response.data.access_token, {\n            path: '/'\n          });\n          return true;\n        } catch (error) {\n          console.error('Error', error.response);\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n}\n\nexport default new ApiRepositories();","map":{"version":3,"sources":["/home/shashi/github/BoldStellar/src/Library/ApiRepositories.js"],"names":["axios","CookieService","cookie","ApiRepositories","GetMenu","id","response","get","data","error","console","GetBlog","GetPage","GetSlider","CreateMenu","menu","clear","post","log","doUserLogin","credentials","doUserRegistration","doUserLogout","remove","doUserLogoutAll","handleLoginSucces","remember","options","path","set","refresh_token","access_token","maxAge","expires_in","isLoggedIn","refreshCredentials"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,MAAMC,MAAM,GAAG,IAAID,aAAJ,EAAf;;AACA,MAAME,eAAN,CAAsB;AAElB,QAAMC,OAAN,CAAcC,EAAE,GAAG,EAAnB,EAAsB;AAClB,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAaF,EAAvB,CAAvB;AACA,aAAOC,QAAQ,CAACE,IAAhB;AACH,KAHD,CAGE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAK,CAACH,QAA7B;AACA,aAAO,KAAP;AACH;AACJ;;AAED,QAAMK,OAAN,CAAcN,EAAE,GAAG,EAAnB,EAAsB;AAClB,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAaF,EAAvB,CAAvB;AACA,aAAOC,QAAQ,CAACE,IAAhB;AACH,KAHD,CAGE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAK,CAACH,QAA7B;AACA,aAAO,KAAP;AACH;AACJ;;AAED,QAAMM,OAAN,CAAcP,EAAE,GAAG,EAAnB,EAAsB;AAClB,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,eAAaF,EAAvB,CAAvB;AACA,aAAOC,QAAQ,CAACE,IAAhB;AACH,KAHD,CAGE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAK,CAACH,QAA7B;AACA,aAAO,KAAP;AACH;AACJ;;AAED,QAAMO,SAAN,CAAgBR,EAAE,GAAG,EAArB,EAAwB;AACpB,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,iBAAeF,EAAzB,CAAvB;AACA,aAAOC,QAAQ,CAACE,IAAhB;AACH,KAHD,CAGE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAK,CAACH,QAA7B;AACA,aAAO,KAAP;AACH;AACJ;;AAGD,QAAMQ,UAAN,CAAiBC,IAAjB,EAAsB;AAClB,QAAG;AACCL,MAAAA,OAAO,CAACM,KAAR,GADD,CAEC;AACA;AACA;AACA;AACA;;AAEA,YAAMV,QAAQ,GAAG,MAAMN,KAAK,CAACiB,IAAN,CAAW,WAAX,EAAwBF,IAAxB,CAAvB;AACAL,MAAAA,OAAO,CAACQ,GAAR,CAAYZ,QAAZ;AACA,aAAOA,QAAQ,CAACE,IAAhB;AACH,KAXD,CAWE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAK,CAACH,QAA7B;AACA,aAAO,KAAP;AACH;AACJ;;AAKD,QAAMa,WAAN,CAAkBC,WAAlB,EAA8B;AAC1B,QAAG;AACC,YAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACiB,IAAN,CAAW,aAAX,EAA0BG,WAA1B,CAAvB;AACA,aAAOd,QAAQ,CAACE,IAAhB;AACH,KAHD,CAGE,OAAMC,KAAN,EAAa;AACX;AACA,aAAO,KAAP;AACH;AACJ;;AACD,QAAMY,kBAAN,CAAyBD,WAAzB,EAAqC;AACjC,QAAG;AACC,YAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACiB,IAAN,CAAW,cAAX,EAA2BG,WAA3B,CAAvB;AACA,aAAOd,QAAQ,CAACE,IAAhB;AACH,KAHD,CAGE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACA,aAAO,KAAP;AACH;AACJ;;AACD,QAAMa,YAAN,CAAmBF,WAAnB,EAA+B;AAC3B,QAAG;AACC,YAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACiB,IAAN,CAAW,YAAX,EAAyBG,WAAzB,CAAvB;AACAlB,MAAAA,MAAM,CAACqB,MAAP,CAAc,eAAd;AACArB,MAAAA,MAAM,CAACqB,MAAP,CAAc,cAAd;AACArB,MAAAA,MAAM,CAACqB,MAAP,CAAc,YAAd;AACAb,MAAAA,OAAO,CAACD,KAAR,CAAcH,QAAd;AACA,aAAOA,QAAQ,CAACE,IAAhB;AACH,KAPD,CAOE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACA,aAAO,KAAP;AACH;AACJ;;AAED,QAAMe,eAAN,CAAsBJ,WAAtB,EAAkC;AAC9B,QAAG;AACC,YAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACiB,IAAN,CAAW,gBAAX,EAA6BG,WAA7B,CAAvB;AACAlB,MAAAA,MAAM,CAACqB,MAAP,CAAc,eAAd;AACArB,MAAAA,MAAM,CAACqB,MAAP,CAAc,cAAd;AACArB,MAAAA,MAAM,CAACqB,MAAP,CAAc,YAAd;AACAb,MAAAA,OAAO,CAACD,KAAR,CAAcH,QAAd;AACA,aAAOA,QAAQ,CAACE,IAAhB;AACH,KAPD,CAOE,OAAMC,KAAN,EAAa;AACXC,MAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACA,aAAO,KAAP;AACH;AACJ;;AAEDgB,EAAAA,iBAAiB,CAACnB,QAAD,EAAWoB,QAAQ,GAAG,KAAtB,EAA4B;AACzC,QAAGA,QAAQ,IAAI,KAAf,EAAqB;AACjB,YAAMC,OAAO,GAAG;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAhB;AACA1B,MAAAA,MAAM,CAAC2B,GAAP,CAAW,eAAX,EAA4BvB,QAAQ,CAACwB,aAArC,EAAoDH,OAApD;AACAzB,MAAAA,MAAM,CAAC2B,GAAP,CAAW,cAAX,EAA2BvB,QAAQ,CAACyB,YAApC,EAAkDJ,OAAlD;AACAzB,MAAAA,MAAM,CAAC2B,GAAP,CAAW,YAAX,EAAyB,KAAzB;AACH,KALD,MAMI;AACA,YAAMF,OAAO,GAAG;AAACC,QAAAA,IAAI,EAAE,GAAP;AAAYI,QAAAA,MAAM,EAAE1B,QAAQ,CAAC2B;AAA7B,OAAhB;AACA/B,MAAAA,MAAM,CAAC2B,GAAP,CAAW,eAAX,EAA4BvB,QAAQ,CAACwB,aAArC,EAAoDH,OAApD;AACAzB,MAAAA,MAAM,CAAC2B,GAAP,CAAW,cAAX,EAA2BvB,QAAQ,CAACyB,YAApC,EAAkD;AAACH,QAAAA,IAAI,EAAE;AAAP,OAAlD;AACA1B,MAAAA,MAAM,CAAC2B,GAAP,CAAW,YAAX,EAAyB,IAAzB;AACH;;AACD,WAAO,IAAP;AACH;;AAED,QAAMK,UAAN,GAAkB;AACd,QAAIhC,MAAM,CAACK,GAAP,CAAW,cAAX,KAA8B,IAAlC,EAAuC;AACnC,aAAO,IAAP;AACH,KAFD,MAGI;AACA,UAAIL,MAAM,CAACK,GAAP,CAAW,eAAX,KAA+B,IAAnC,EAAyC;AACrC,cAAM4B,kBAAkB,GAAG;AACvB,2BAAiBjC,MAAM,CAACK,GAAP,CAAW,eAAX,CADM;AAEvB,wBAAc,eAFS;AAGvB,uBAAa,GAHU;AAIvB,2BAAiB;AAJM,SAA3B;;AAMA,YAAG;AACC,gBAAMD,QAAQ,GAAG,MAAMN,KAAK,CAACiB,IAAN,CAAW,aAAX,EAA0BkB,kBAA1B,CAAvB,CADD,CAEC;;AACA,cAAIR,OAAO,GAAG,IAAd;;AACA,cAAIzB,MAAM,CAACK,GAAP,CAAW,aAAX,KAA6B,IAAjC,EAAuC;AACnCoB,YAAAA,OAAO,GAAG;AAACC,cAAAA,IAAI,EAAE,GAAP;AAAYI,cAAAA,MAAM,EAAE1B,QAAQ,CAAC2B;AAA7B,aAAV;AACH,WAFD,MAEO;AACHN,YAAAA,OAAO,GAAG;AAACC,cAAAA,IAAI,EAAE;AAAP,aAAV;AACH;;AACD1B,UAAAA,MAAM,CAAC2B,GAAP,CAAW,eAAX,EAA4BvB,QAAQ,CAACE,IAAT,CAAcsB,aAA1C,EAAyDH,OAAzD;AACAzB,UAAAA,MAAM,CAAC2B,GAAP,CAAW,cAAX,EAA2BvB,QAAQ,CAACE,IAAT,CAAcuB,YAAzC,EAAuD;AAACH,YAAAA,IAAI,EAAE;AAAP,WAAvD;AACA,iBAAO,IAAP;AACH,SAZD,CAYE,OAAMnB,KAAN,EAAa;AACXC,UAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,EAAuBA,KAAK,CAACH,QAA7B;AACA,iBAAO,KAAP;AACH;AACJ,OAvBD,MAuBO;AACH,eAAO,KAAP;AACH;AAEJ;AACJ;;AA/JiB;;AAkKtB,eAAe,IAAIH,eAAJ,EAAf","sourcesContent":["import axios from '../Services/ApiService';\nimport CookieService from '../Services/CookieService';\n\nconst cookie = new CookieService;\nclass ApiRepositories {\n\n    async GetMenu(id = ''){\n        try{\n            const response = await axios.get('/api/menu/'+id);\n            return response.data;\n        } catch(error) {\n            console.error('Error', error.response);\n            return false;\n        }\n    }\n\n    async GetBlog(id = ''){\n        try{\n            const response = await axios.get('/api/blog/'+id);\n            return response.data;\n        } catch(error) {\n            console.error('Error', error.response);\n            return false;\n        }\n    }\n\n    async GetPage(id = ''){\n        try{\n            const response = await axios.get('/api/page/'+id);\n            return response.data;\n        } catch(error) {\n            console.error('Error', error.response);\n            return false;\n        }\n    }\n\n    async GetSlider(id = ''){\n        try{\n            const response = await axios.get('/api/slider/'+id);\n            return response.data;\n        } catch(error) {\n            console.error('Error', error.response);\n            return false;\n        }\n    }\n\n    \n    async CreateMenu(menu){\n        try{\n            console.clear()\n            // var data = new FormData();\n            // data.append('title', 'Menu1');\n            // data.append('url', 'localhost');\n            // data.append('status', '1');\n            // data.append('sortby', '1');\n\n            const response = await axios.post('/api/menu', menu);\n            console.log(response);\n            return response.data;\n        } catch(error) {\n            console.error('Error', error.response);\n            return false;\n        }\n    }\n\n\n\n\n    async doUserLogin(credentials){\n        try{\n            const response = await axios.post('oauth/token', credentials);\n            return response.data;\n        } catch(error) {\n            //console.error('Error', error.response);\n            return false;\n        }\n    }\n    async doUserRegistration(credentials){\n        try{\n            const response = await axios.post('api/register', credentials);\n            return response.data;\n        } catch(error) {\n            console.error('Error', error);\n            return false;\n        }\n    }\n    async doUserLogout(credentials){\n        try{\n            const response = await axios.post('api/logout', credentials);\n            cookie.remove('refresh_token');\n            cookie.remove('access_token');\n            cookie.remove('remeber_me');\n            console.error(response);\n            return response.data;\n        } catch(error) {\n            console.error('Error', error);\n            return false;\n        }\n    }\n\n    async doUserLogoutAll(credentials){\n        try{\n            const response = await axios.post('api/logout/all', credentials);\n            cookie.remove('refresh_token');\n            cookie.remove('access_token');\n            cookie.remove('remeber_me');\n            console.error(response);\n            return response.data;\n        } catch(error) {\n            console.error('Error', error);\n            return false;\n        }\n    }\n\n    handleLoginSucces(response, remember = false){\n        if(remember == false){\n            const options = {path: '/'};\n            cookie.set('refresh_token', response.refresh_token, options);\n            cookie.set('access_token', response.access_token, options);\n            cookie.set('remeber_me', false);\n        }\n        else{\n            const options = {path: '/', maxAge: response.expires_in};\n            cookie.set('refresh_token', response.refresh_token, options);\n            cookie.set('access_token', response.access_token, {path: '/'});\n            cookie.set('remeber_me', true);\n        }\n        return true;\n    }\n\n    async isLoggedIn(){\n        if (cookie.get('access_token') != null){\n            return true;\n        }\n        else{\n            if (cookie.get('refresh_token') != null) {\n                const refreshCredentials = {\n                    'refresh_token': cookie.get('refresh_token'),\n                    'grant_type': 'refresh_token',\n                    'client_id': '2',\n                    'client_secret': 'h4Rszv34VV9o0BHKhowVSLEg5kfFIEvNlJoALpHc'\n                };\n                try{\n                    const response = await axios.post('oauth/token', refreshCredentials);\n                    //console.log(response);\n                    var options = null;\n                    if (cookie.get('remember_me') == true) {\n                        options = {path: '/', maxAge: response.expires_in};    \n                    } else {\n                        options = {path: '/'};\n                    }\n                    cookie.set('refresh_token', response.data.refresh_token, options);\n                    cookie.set('access_token', response.data.access_token, {path: '/'});\n                    return true;\n                } catch(error) {\n                    console.error('Error', error.response);\n                    return false;\n                }    \n            } else {\n                return false;\n            }\n            \n        }\n    }\n}\n\nexport default new ApiRepositories();"]},"metadata":{},"sourceType":"module"}