{"ast":null,"code":"import API from '../../ApiCall';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nexport const FETCH_MENU_REQUEST = 'FETCH_MENU_REQUEST';\nexport const FETCH_MENU_SUCCESS = 'FETCH_MENU_SUCCESS';\nexport const FETCH_MENU_FAILURE = 'FETCH_MENU_FAILURE';\nconst initialState = {\n  loading: false,\n  create: {\n    title: '',\n    url: '',\n    parent: '',\n    status: '',\n    sortby: ''\n  },\n  read: {\n    id: ''\n  },\n  update: {\n    title: '',\n    url: '',\n    parent: '',\n    status: '',\n    sortby: ''\n  },\n  distroy: {\n    id: ''\n  },\n  error: ''\n};\n\nconst fetchMenuRequest = () => {\n  return {\n    type: FETCH_MENU_REQUEST\n  };\n};\n\nconst fetchMenuSucces = menuDetail => {\n  return {\n    type: FETCH_MENU_SUCCESS,\n    payload: menuDetail\n  };\n};\n\nconst fetchMenuFailure = error => {\n  return {\n    type: FETCH_MENU_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchMenu = error => {// return (dispatch) => {\n  //     dispatch(fetchUserRequest);\n  //     API('user')\n  //     .then(res => {\n  //         const userDetail = res.data;\n  //         dispatch(setLoginTrue());\n  //         dispatch(fetchUserSucces(userDetail));\n  //     })\n  //     .catch(error => {\n  //         const errorMsg = error.message;\n  //         dispatch(setLoginFalse());\n  //         dispatch(fetchUserFailure(error));\n  //     })\n  // }\n};\nexport const menuReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MENU_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_MENU_SUCCESS:\n      return { ...state,\n        loading: false,\n        menu: action.payload,\n        error: ''\n      };\n\n    case FETCH_MENU_FAILURE:\n      return { ...state,\n        loading: false,\n        menu: [],\n        error: ''\n      };\n      break;\n\n    default:\n      return state;\n      break;\n  }\n};\n\nfunction MapStateToProps(state) {\n  return {\n    menu: {\n      create: state.create,\n      read: state.read,\n      update: state.update,\n      distroy: state.distroy\n    }\n  };\n}\n\nfunction MapDispactchToProps(state) {\n  return bindActionCreators(menu, dispatch);\n}\n\nconst user = connect(MapStateToProps, MapDispactchToProps)(Routing);","map":{"version":3,"sources":["/home/shashi/github/BoldStellar/src/Services/ReduxServices/Reducers/Menu.js"],"names":["API","bindActionCreators","connect","FETCH_MENU_REQUEST","FETCH_MENU_SUCCESS","FETCH_MENU_FAILURE","initialState","loading","create","title","url","parent","status","sortby","read","id","update","distroy","error","fetchMenuRequest","type","fetchMenuSucces","menuDetail","payload","fetchMenuFailure","fetchMenu","menuReducer","state","action","menu","MapStateToProps","MapDispactchToProps","dispatch","user","Routing"],"mappings":"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","sourcesContent":["import API from '../../ApiCall';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nexport const FETCH_MENU_REQUEST = 'FETCH_MENU_REQUEST';\nexport const FETCH_MENU_SUCCESS = 'FETCH_MENU_SUCCESS';\nexport const FETCH_MENU_FAILURE = 'FETCH_MENU_FAILURE';\n\n\nconst initialState = {\n\tloading: false,\n             create: {\n                 title: '',\n                 url: '',\n                 parent: '',\n                 status: '',\n                 sortby: '',\n             },\n             read: {\n                 id: ''\n             },\n             update: {\n                 title:'',\n                 url:'',\n                 parent: '',\n                 status: '',\n                 sortby: '',\n             },\n             distroy: {\n                 id: ''\n             },\n             error: ''\n         }\n\nconst fetchMenuRequest = () => {\n    return {\n        type: FETCH_MENU_REQUEST\n    }\n}\n\nconst fetchMenuSucces = menuDetail => {\n    return {\n        type: FETCH_MENU_SUCCESS,\n        payload: menuDetail\n    }\n}\n\nconst fetchMenuFailure = error => {\n    return {\n        type: FETCH_MENU_FAILURE,\n        payload: error\n    }\n}\n\nexport const fetchMenu = error => {\n    // return (dispatch) => {\n    //     dispatch(fetchUserRequest);\n    //     API('user')\n    //     .then(res => {\n    //         const userDetail = res.data;\n    //         dispatch(setLoginTrue());\n    //         dispatch(fetchUserSucces(userDetail));\n    //     })\n    //     .catch(error => {\n    //         const errorMsg = error.message;\n    //         dispatch(setLoginFalse());\n    //         dispatch(fetchUserFailure(error));\n    //     })\n    // }\n}\n\nexport const menuReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_MENU_REQUEST: return {\n            ...state,\n            loading: true\n        }\n\n        case FETCH_MENU_SUCCESS: return {\n            ...state,\n            loading: false,\n            menu: action.payload,\n            error: ''\n        }\n\n        case FETCH_MENU_FAILURE: return {\n            ...state,\n            loading: false,\n            menu: [],\n            error: ''\n        }\n            \n            break;\n    \n        default: return state\n            break;\n    }\n}\n\n\nfunction MapStateToProps(state) {\n    return{\n        menu: {\n            create: state.create,\n            read: state.read,\n            update: state.update,\n            distroy: state.distroy\n        }\n    }\n}\n\nfunction MapDispactchToProps(state) {\n    return bindActionCreators(menu, dispatch);\n}\n\nconst user = connect(MapStateToProps, MapDispactchToProps)(Routing);\n\n\n"]},"metadata":{},"sourceType":"module"}