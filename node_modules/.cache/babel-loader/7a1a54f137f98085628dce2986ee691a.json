{"ast":null,"code":"import API from '../../ApiCall';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Routing from '../../Routing';\nexport const FETCH_MENU_REQUEST = 'FETCH_MENU_REQUEST';\nexport const FETCH_MENU_SUCCESS = 'FETCH_MENU_SUCCESS';\nexport const FETCH_MENU_FAILURE = 'FETCH_MENU_FAILURE';\nconst initialState = {\n  loading: false,\n  create: {\n    title: '',\n    url: '',\n    parent: '',\n    status: '',\n    sortby: ''\n  },\n  read: {\n    id: ''\n  },\n  update: {\n    title: '',\n    url: '',\n    parent: '',\n    status: '',\n    sortby: ''\n  },\n  distroy: {\n    id: ''\n  },\n  error: ''\n};\n\nconst fetchMenuRequest = () => {\n  return {\n    type: FETCH_MENU_REQUEST\n  };\n};\n\nconst fetchMenuSucces = menuDetail => {\n  return {\n    type: FETCH_MENU_SUCCESS,\n    payload: menuDetail\n  };\n};\n\nconst fetchMenuFailure = error => {\n  return {\n    type: FETCH_MENU_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchMenu = error => {// return (dispatch) => {\n  //     dispatch(fetchUserRequest);\n  //     API('user')\n  //     .then(res => {\n  //         const userDetail = res.data;\n  //         dispatch(setLoginTrue());\n  //         dispatch(fetchUserSucces(userDetail));\n  //     })\n  //     .catch(error => {\n  //         const errorMsg = error.message;\n  //         dispatch(setLoginFalse());\n  //         dispatch(fetchUserFailure(error));\n  //     })\n  // }\n};\nexport const menuReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MENU_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_MENU_SUCCESS:\n      return { ...state,\n        loading: false,\n        user: action.payload,\n        error: ''\n      };\n\n    case FETCH_MENU_FAILURE:\n      return { ...state,\n        loading: false,\n        user: [],\n        error: ''\n      };\n      break;\n\n    default:\n      return state;\n      break;\n  }\n};","map":{"version":3,"sources":["/var/www/html/boldstellar/src/Services/ReduxServices/Reducers/Menu.js"],"names":["API","bindActionCreators","connect","Routing","FETCH_MENU_REQUEST","FETCH_MENU_SUCCESS","FETCH_MENU_FAILURE","initialState","loading","create","title","url","parent","status","sortby","read","id","update","distroy","error","fetchMenuRequest","type","fetchMenuSucces","menuDetail","payload","fetchMenuFailure","fetchMenu","menuReducer","state","action","user"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,eAAhB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAGP,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAELC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,GAAG,EAAE,EAFD;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAIJC,IAAAA,MAAM,EAAE,EAJJ;AAKJC,IAAAA,MAAM,EAAE;AALJ,GAFH;AASLC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAE;AADF,GATD;AAYLC,EAAAA,MAAM,EAAE;AACJP,IAAAA,KAAK,EAAC,EADF;AAEJC,IAAAA,GAAG,EAAC,EAFA;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAIJC,IAAAA,MAAM,EAAE,EAJJ;AAKJC,IAAAA,MAAM,EAAE;AALJ,GAZH;AAmBLI,EAAAA,OAAO,EAAE;AACLF,IAAAA,EAAE,EAAE;AADC,GAnBJ;AAsBLG,EAAAA,KAAK,EAAE;AAtBF,CAArB;;AAyBA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEjB;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMkB,eAAe,GAAGC,UAAU,IAAI;AAClC,SAAO;AACHF,IAAAA,IAAI,EAAEhB,kBADH;AAEHmB,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALD;;AAOA,MAAME,gBAAgB,GAAGN,KAAK,IAAI;AAC9B,SAAO;AACHE,IAAAA,IAAI,EAAEf,kBADH;AAEHkB,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMO,SAAS,GAAGP,KAAK,IAAI,CAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAfM;AAiBP,OAAO,MAAMQ,WAAW,GAAG,CAACC,KAAK,GAAGrB,YAAT,EAAuBsB,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACR,IAAf;AACI,SAAKjB,kBAAL;AAAyB,aAAO,EAC5B,GAAGwB,KADyB;AAE5BpB,QAAAA,OAAO,EAAE;AAFmB,OAAP;;AAKzB,SAAKH,kBAAL;AAAyB,aAAO,EAC5B,GAAGuB,KADyB;AAE5BpB,QAAAA,OAAO,EAAE,KAFmB;AAG5BsB,QAAAA,IAAI,EAAED,MAAM,CAACL,OAHe;AAI5BL,QAAAA,KAAK,EAAE;AAJqB,OAAP;;AAOzB,SAAKb,kBAAL;AAAyB,aAAO,EAC5B,GAAGsB,KADyB;AAE5BpB,QAAAA,OAAO,EAAE,KAFmB;AAG5BsB,QAAAA,IAAI,EAAE,EAHsB;AAI5BX,QAAAA,KAAK,EAAE;AAJqB,OAAP;AAOrB;;AAEJ;AAAS,aAAOS,KAAP;AACL;AAvBR;AAyBH,CA1BM","sourcesContent":["import API from '../../ApiCall';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Routing from '../../Routing';\n\nexport const FETCH_MENU_REQUEST = 'FETCH_MENU_REQUEST';\nexport const FETCH_MENU_SUCCESS = 'FETCH_MENU_SUCCESS';\nexport const FETCH_MENU_FAILURE = 'FETCH_MENU_FAILURE';\n\n\nconst initialState = {\n\t\t\t\tloading: false,\n                create: {\n                    title: '',\n                    url: '',\n                    parent: '',\n                    status: '',\n                    sortby: '',\n                },\n                read: {\n                    id: ''\n                },\n                update: {\n                    title:'',\n                    url:'',\n                    parent: '',\n                    status: '',\n                    sortby: '',\n                },\n                distroy: {\n                    id: ''\n                },\n                error: ''\n            }\n\nconst fetchMenuRequest = () => {\n    return {\n        type: FETCH_MENU_REQUEST\n    }\n}\n\nconst fetchMenuSucces = menuDetail => {\n    return {\n        type: FETCH_MENU_SUCCESS,\n        payload: menuDetail\n    }\n}\n\nconst fetchMenuFailure = error => {\n    return {\n        type: FETCH_MENU_FAILURE,\n        payload: error\n    }\n}\n\nexport const fetchMenu = error => {\n    // return (dispatch) => {\n    //     dispatch(fetchUserRequest);\n    //     API('user')\n    //     .then(res => {\n    //         const userDetail = res.data;\n    //         dispatch(setLoginTrue());\n    //         dispatch(fetchUserSucces(userDetail));\n    //     })\n    //     .catch(error => {\n    //         const errorMsg = error.message;\n    //         dispatch(setLoginFalse());\n    //         dispatch(fetchUserFailure(error));\n    //     })\n    // }\n}\n\nexport const menuReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_MENU_REQUEST: return {\n            ...state,\n            loading: true\n        }\n\n        case FETCH_MENU_SUCCESS: return {\n            ...state,\n            loading: false,\n            user: action.payload,\n            error: ''\n        }\n\n        case FETCH_MENU_FAILURE: return {\n            ...state,\n            loading: false,\n            user: [],\n            error: ''\n        }\n            \n            break;\n    \n        default: return state\n            break;\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}